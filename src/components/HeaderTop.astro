---
import { Image } from 'astro:assets';
import { Astronav, MenuItems, MenuIcon, Dropdown, DropdownItems } from 'astro-navbar';
import config from '@config/config.json';
import menu from '@config/menu.json';
import TelegramIcon from '@components/icons/TelegramIcon.astro';
import WhatsappIcon from '@components/icons/WhatsappIcon.astro';
import CloseIcon from '@icons/CloseIcon.astro';
import HomeIcon from '@icons/HomeIcon.astro';
import ThemeIcon from '@components/ThemeIcon.astro';

export interface ChildNavigationLink {
  name: string;
  url: string;
}

export interface NavigationLink {
  name: string;
  url: string;
  hasChildren?: boolean;
  children?: ChildNavigationLink[];
}

const { main }: { main: NavigationLink[] } = menu;
const { pathname } = Astro.url;
---

<header
  class="fixed top-0 z-20 flex w-full items-center justify-around border-b border-transparent bg-white/50 py-2 pl-6 pr-8 backdrop-blur-sm ease-in-out dark:bg-white/10 lg:pl-8"
>
  <nav class="navbar container flex flex-col lg:flex-row lg:items-center lg:justify-between">
    <Astronav closeOnClick>
      <div class="flex w-full items-center justify-between lg:w-auto">
        <a class="hover:!text-default flex items-center gap-1" href="/">
          <figure>
            <Image
              src={config.site.logo}
              alt={config.site.title}
              class="w-16 rounded-full bg-white"
              width={512}
              height={512}
              decoding="async"
              loading="lazy"
            />
          </figure>
          <span class="ml-4 hidden font-bold text-cyan-700/100 hover:text-teal-500 dark:text-white/100 sm:block"
            >{config.site.brand}</span
          >
        </a>
        <div class="block cursor-pointer lg:hidden">
          <MenuIcon class="text-primary mt-2 h-10 w-10 fill-current text-cyan-700/100 dark:text-white/100" />
        </div>
      </div>
      <div class="flex items-center gap-6 lg:order-last">
        <div class="hidden lg:block">
          <ul class="flex items-center gap-2">
            <li>
              <a
                class="text-sm font-bold text-cyan-700/100 hover:text-teal-500 dark:text-white/100 md:mr-4"
                href="tel:+79372758313"
              >
                +7 937 275 83 13</a
              >
            </li>
            <li>
              <a
                class="inline-flex h-10 w-10 items-center justify-center rounded-full text-center text-gray-500 transition hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-offset-2 focus:ring-offset-white dark:text-gray-500 dark:hover:bg-gray-800 dark:hover:text-gray-200"
                href="https://t.me/79372758313"
              >
                <span class="sr-only">Telegram</span>
                <TelegramIcon />
              </a>
            </li>
            <li>
              <a
                class="inline-flex h-10 w-10 items-center justify-center rounded-full text-center text-gray-500 transition hover:bg-green-300 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-offset-2 focus:ring-offset-white dark:text-gray-500 dark:hover:bg-gray-800 dark:hover:text-gray-200"
                href="https://wa.me/79372758313"
              >
                <span class="sr-only">Whatsapp</span>
                <WhatsappIcon />
              </a>
            </li>
            <li class="ml-2 pt-2">{config.features.dark_mode && <ThemeIcon />}</li>
          </ul>
        </div>
      </div>
      <MenuItems class="hidden w-full lg:flex lg:w-auto">
        <ul class="flex flex-col text-center lg:flex-row lg:gap-5 lg:text-left">
          {
            main.map((menu) => (
              <li class="mx-auto my-2">
                {menu.hasChildren ? (
                  <Dropdown class="group cursor-pointer">
                    <button class="mx-auto flex items-center text-center font-semibold">
                      <span class="text-md font-bold text-cyan-700/100 dark:text-white/100">{menu.name}</span>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke-width="3"
                        stroke="currentColor"
                        class="text-md mt-1 h-3 w-3 font-bold text-cyan-700/100 hover:text-teal-500 group-open:rotate-180 dark:text-white/100"
                      >
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5" />
                      </svg>
                    </button>
                    <DropdownItems class="relative">
                      <div class="top-2 mt-4 w-full rounded-xl bg-[#EDF7F3] p-4 lg:absolute lg:w-[300px] lg:bg-white">
                        <ul class="nav-item nav-dropdown group relative w-full cursor-pointer lg:px-2">
                          {menu.children?.map((child) => (
                            <li class="my-1 border-l-4 p-1 leading-3 hover:bg-slate-200 hover:text-teal-500">
                              <a
                                class="text-xs font-bold text-cyan-700/100 dark:text-white/100 md:mr-4"
                                href={child.url}
                              >
                                {child.name}
                              </a>
                            </li>
                          ))}
                        </ul>
                      </div>
                    </DropdownItems>
                  </Dropdown>
                ) : (
                  <a
                    class="text-md font-bold text-cyan-700/100 hover:text-teal-500 dark:text-white/100 md:mr-4"
                    rel="prefetch"
                    href={menu.url}
                  >
                    {menu.name}
                  </a>
                )}
              </li>
            ))
          }
        </ul>
      </MenuItems>
    </Astronav>
  </nav>
</header>
<script is:inline>
  const header = document.querySelector('.header');
  window.addEventListener('scroll', () => {
    const scrollY = window.scrollY;
    if (scrollY > 0) {
      header.classList.add('header-sticky');
    } else {
      header.classList.remove('header-sticky');
    }
  });
</script>
